<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2020/11/24/tkMybatis/"/>
      <url>2020/11/24/tkMybatis/</url>
      
        <content type="html"><![CDATA[<h1 id="tk-Mybatis-的使用"><a href="#tk-Mybatis-的使用" class="headerlink" title="tk.Mybatis 的使用"></a>tk.Mybatis 的使用</h1><h3 id="一-序言"><a href="#一-序言" class="headerlink" title="一 序言:"></a>一 序言:</h3><h4 id="不知各位程序君在开发过程中-是否依旧在为手动创建entity实体类-dao层接口以及Mapper-xml中疯狂追加sql语句烦恼吗-那么接下来将通过介绍如何使用tk-mybatis来提升开发效率"><a href="#不知各位程序君在开发过程中-是否依旧在为手动创建entity实体类-dao层接口以及Mapper-xml中疯狂追加sql语句烦恼吗-那么接下来将通过介绍如何使用tk-mybatis来提升开发效率" class="headerlink" title="不知各位程序君在开发过程中, 是否依旧在为手动创建entity实体类/dao层接口以及Mapper.xml中疯狂追加sql语句烦恼吗 ?那么接下来将通过介绍如何使用tk.mybatis来提升开发效率!"></a>不知各位程序君在开发过程中, 是否依旧在为手动创建entity实体类/dao层接口以及Mapper.xml中疯狂追加sql语句烦恼吗 ?那么接下来将通过介绍如何使用tk.mybatis来提升开发效率!</h4><h3 id="二-tk-mybatis插件的使用"><a href="#二-tk-mybatis插件的使用" class="headerlink" title="二 tk.mybatis插件的使用 :"></a>二 tk.mybatis插件的使用 :</h3><h5 id="注意-本文主要讲解如何在springboot项目中使用tk-mybatis来简化-service和dao层的单表操作-达到在service和dao层的单表操作零代码实现-以及自动创建实体类"><a href="#注意-本文主要讲解如何在springboot项目中使用tk-mybatis来简化-service和dao层的单表操作-达到在service和dao层的单表操作零代码实现-以及自动创建实体类" class="headerlink" title="注意:  本文主要讲解如何在springboot项目中使用tk.mybatis来简化 service和dao层的单表操作,达到在service和dao层的单表操作零代码实现,以及自动创建实体类 !"></a>注意:  本文主要讲解如何在springboot项目中使用tk.mybatis来简化 service和dao层的单表操作,达到在service和dao层的单表操作零代码实现,以及自动创建实体类 !</h5><h4 id="1-在项目的pom-xml文件中引入-mapper-spring-boot-starter-依赖，该依赖会自动引入-MyBaits-相关依赖"><a href="#1-在项目的pom-xml文件中引入-mapper-spring-boot-starter-依赖，该依赖会自动引入-MyBaits-相关依赖" class="headerlink" title="1. 在项目的pom.xml文件中引入 mapper-spring-boot-starter 依赖，该依赖会自动引入 MyBaits 相关依赖"></a>1. 在项目的pom.xml文件中引入 <code>mapper-spring-boot-starter</code> 依赖，该依赖会自动引入 MyBaits 相关依赖</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;mapper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;2.0.2&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h4 id="2-在pom-xml-中添加mybatis-generator-maven-plugin-插件"><a href="#2-在pom-xml-中添加mybatis-generator-maven-plugin-插件" class="headerlink" title="2. 在pom.xml 中添加mybatis-generator-maven-plugin 插件"></a>2. 在pom.xml 中添加mybatis-generator-maven-plugin 插件</h4><h5 id="该插件是-MyBatis-的-Maven-插件用于自动生成实体类-Mapper接口和mapper-xml文件"><a href="#该插件是-MyBatis-的-Maven-插件用于自动生成实体类-Mapper接口和mapper-xml文件" class="headerlink" title="该插件是 MyBatis 的 Maven 插件用于自动生成实体类,Mapper接口和mapper.xml文件"></a>该插件是 MyBatis 的 Maven 插件用于自动生成实体类,Mapper接口和mapper.xml文件</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.5&lt;/version&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;configurationFile&gt;$&#123;basedir&#125;/src/main/resources/generator/generatorConfig.xml&lt;/configurationFile&gt;</span><br><span class="line">                &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">                &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">            &lt;dependencies&gt;</span><br><span class="line">                &lt;dependency&gt;</span><br><span class="line">                    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;$&#123;mysql.version&#125;&lt;/version&gt;</span><br><span class="line">                &lt;/dependency&gt;</span><br><span class="line">                &lt;dependency&gt;</span><br><span class="line">                    &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;mapper&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;3.4.4&lt;/version&gt;</span><br><span class="line">                &lt;/dependency&gt;</span><br><span class="line">            &lt;/dependencies&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure><h4 id="3-设置-mybatis-generator-maven-plugin-插件自动生成代码配置"><a href="#3-设置-mybatis-generator-maven-plugin-插件自动生成代码配置" class="headerlink" title="3. 设置 mybatis-generator-maven-plugin 插件自动生成代码配置"></a>3. 设置 mybatis-generator-maven-plugin 插件自动生成代码配置</h4><h5 id="在src-main-resources下新建generator目录-然后在generator目录下在新建一个generatorConfig-xml文件-然后在该文件中配置自动生成代码的相关详情-—-注意该配置文件中的数据库连接池配置根据个人项目实际情况去配置-本人这里使用的是国产数据库金仓"><a href="#在src-main-resources下新建generator目录-然后在generator目录下在新建一个generatorConfig-xml文件-然后在该文件中配置自动生成代码的相关详情-—-注意该配置文件中的数据库连接池配置根据个人项目实际情况去配置-本人这里使用的是国产数据库金仓" class="headerlink" title="在src/main/resources下新建generator目录,然后在generator目录下在新建一个generatorConfig.xml文件,然后在该文件中配置自动生成代码的相关详情 — 注意该配置文件中的数据库连接池配置根据个人项目实际情况去配置,本人这里使用的是国产数据库金仓,"></a>在src/main/resources下新建generator目录,然后在generator目录下在新建一个generatorConfig.xml文件,然后在该文件中配置自动生成代码的相关详情 — 注意该配置文件中的数据库连接池配置根据个人项目实际情况去配置,本人这里使用的是国产数据库金仓,</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!-- 引入数据库连接配置 --&gt;</span><br><span class="line">    &lt;context id=<span class="string">&quot;KingbaseES8&quot;</span> targetRuntime=<span class="string">&quot;MyBatis3Simple&quot;</span> defaultModelType=<span class="string">&quot;flat&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;beginningDelimiter&quot;</span> value=<span class="string">&quot;`&quot;</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;endingDelimiter&quot;</span> value=<span class="string">&quot;`&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 tk.mybatis 插件 --&gt;</span><br><span class="line">        &lt;plugin type=<span class="string">&quot;tk.mybatis.mapper.generator.MapperPlugin&quot;</span>&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;mappers&quot;</span> value=<span class="string">&quot;com.beyondbit.ias.bclproject.common.MyMapper&quot;</span>/&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置数据库连接 --&gt;</span><br><span class="line">        &lt;jdbcConnection</span><br><span class="line">                driverClass=<span class="string">&quot;com.kingbase8.Driver&quot;</span></span><br><span class="line">                connectionURL=<span class="string">&quot;jdbc:kingbase8://31.0.37.96:54321/DBIT_XH&quot;</span></span><br><span class="line">                userId=<span class="string">&quot;system&quot;</span></span><br><span class="line">                password=<span class="string">&quot;System#1234&quot;</span>&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置实体类存放路径 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=<span class="string">&quot;com.beyondbit.ias.bclproject.entity&quot;</span> targetProject=<span class="string">&quot;src/main/java&quot;</span>&gt;</span><br><span class="line">            &lt;!--  <span class="keyword">for</span> MyBatis3/MyBatis3Simple</span><br><span class="line">          自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">       --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;constructorBased&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层<span class="keyword">package</span>，最终生成的类放在这个<span class="keyword">package</span>下，默认为<span class="keyword">false</span> --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;enableSubPackages&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- <span class="keyword">for</span> MyBatis3 / MyBatis3Simple</span><br><span class="line">                是否创建一个不可变的类，如果为<span class="keyword">true</span>，</span><br><span class="line">                那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;immutable&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置一个根对象，</span><br><span class="line">                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">                注意：如果在key <span class="class"><span class="keyword">class</span>或者<span class="title">record</span> <span class="title">class</span>中有<span class="title">root</span> <span class="title">class</span>相同的属性，<span class="title">MBG</span>就不会重新生成这些属性了，包括：</span></span><br><span class="line"><span class="class">                    1，属性名相同，类型相同，有相同的<span class="title">getter</span>/<span class="title">setter</span>方法；</span></span><br><span class="line"><span class="class">             --&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">property</span> <span class="title">name</span></span>=<span class="string">&quot;BaseEntity&quot;</span> value=<span class="string">&quot;com.beyondbit.ias.bclproject.entity&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;trimStrings&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 XML 存放路径 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=<span class="string">&quot;mapper&quot;</span> targetProject=<span class="string">&quot;src/main/resources&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 DAO 存放路径 --&gt;</span><br><span class="line">        &lt;javaClientGenerator</span><br><span class="line">                targetPackage=<span class="string">&quot;com.beyondbit.ias.bclproject.dao&quot;</span></span><br><span class="line">                targetProject=<span class="string">&quot;src/main/java&quot;</span></span><br><span class="line">                type=<span class="string">&quot;XMLMAPPER&quot;</span>&gt;</span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层<span class="keyword">package</span>，最终生成的类放在这个<span class="keyword">package</span>下，默认为<span class="keyword">false</span> --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;enableSubPackages&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置需要指定生成的数据库和表，% 代表所有表 --&gt;</span><br><span class="line">        &lt;table catalog=<span class="string">&quot;DBIT_XH&quot;</span> tableName=<span class="string">&quot;OA_%&quot;</span>&gt;</span><br><span class="line">            &lt;!-- 默认为<span class="keyword">false</span>，如果设置为<span class="keyword">true</span>，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;ignoreQualifiersAtRuntime&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-在application-yml中配置mybatis"><a href="#4-在application-yml中配置mybatis" class="headerlink" title="4. 在application.yml中配置mybatis"></a>4. 在application.yml中配置mybatis</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mybatis:</span><br><span class="line">    type-aliases-<span class="keyword">package</span>: <span class="comment">//实体类的存放路径，如:com.beyondbit.ias.*.entity</span></span><br><span class="line">    mapper-locations: classpath:mapper<span class="comment">/*.xml  </span></span><br><span class="line"><span class="comment">    configuration: </span></span><br><span class="line"><span class="comment">      map-underscore-to-camel-case: true //开启驼峰功能</span></span><br><span class="line"><span class="comment">      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl //sql控制台打印</span></span><br><span class="line"><span class="comment">    configuration-properties: &#123; dbSchema: DBIT_BCLPROJECT. &#125; //配置数据库的模式</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><h4 id="5-创建一个通用的父级MyMapper接口"><a href="#5-创建一个通用的父级MyMapper接口" class="headerlink" title="5. 创建一个通用的父级MyMapper接口"></a>5. 创建一个通用的父级MyMapper接口</h4><h5 id="注意-该父级Mapper接口包含了大部分的单表操作的方法-通过让dao层所有mapper接口继承该父级MyMapper接口-便可以让所有的dao层mapper接口自动继承来自MyMapper中的所有单表操作方法。这样我们就可以做到dao层接口单表操作的绝大部分场景零代码实现。—-特别注意该接口千万不能被mapperScan扫描到"><a href="#注意-该父级Mapper接口包含了大部分的单表操作的方法-通过让dao层所有mapper接口继承该父级MyMapper接口-便可以让所有的dao层mapper接口自动继承来自MyMapper中的所有单表操作方法。这样我们就可以做到dao层接口单表操作的绝大部分场景零代码实现。—-特别注意该接口千万不能被mapperScan扫描到" class="headerlink" title="注意: 该父级Mapper接口包含了大部分的单表操作的方法,通过让dao层所有mapper接口继承该父级MyMapper接口,便可以让所有的dao层mapper接口自动继承来自MyMapper中的所有单表操作方法。这样我们就可以做到dao层接口单表操作的绝大部分场景零代码实现。—- 特别注意该接口千万不能被mapperScan扫描到"></a>注意: 该父级Mapper接口包含了大部分的单表操作的方法,通过让dao层所有mapper接口继承该父级MyMapper接口,便可以让所有的dao层mapper接口自动继承来自MyMapper中的所有单表操作方法。这样我们就可以做到dao层接口单表操作的绝大部分场景零代码实现。—- 特别注意该接口千万不能被mapperScan扫描到</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.funtl.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.MySqlMapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MyMapper 作为tk.mybatis提供的通用mapper父级接口</span></span><br><span class="line"><span class="comment"> * 特别注意，该接口不能被<span class="doctag">@mapperScan</span>注解的路径扫描到，否则会出错</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: MyMapper&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangchengkai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/25 0:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyMapper</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">T</span>&gt;, <span class="title">MySqlMapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-利用插件执行自动生成代码-实体类-mapper接口和mapper-xml代码"><a href="#6-利用插件执行自动生成代码-实体类-mapper接口和mapper-xml代码" class="headerlink" title="6.  利用插件执行自动生成代码 (实体类/mapper接口和mapper.xml代码)"></a>6.  利用插件执行自动生成代码 (实体类/mapper接口和mapper.xml代码)</h4><h5 id="1-方式一-打开idea或者eclipse的Terminal-终端输入的命令-mvn-mybatis-generator-generate-回车"><a href="#1-方式一-打开idea或者eclipse的Terminal-终端输入的命令-mvn-mybatis-generator-generate-回车" class="headerlink" title="(1) 方式一  :  打开idea或者eclipse的Terminal 终端输入的命令   mvn mybatis-generator:generate   回车"></a>(1) 方式一  :  打开idea或者eclipse的Terminal 终端输入的命令   mvn mybatis-generator:generate   回车</h5><h5 id="2-方式二-进入项目根目录文件然后cmd进入终端-输入命令-mvn-mybatis-generator-generate-回车"><a href="#2-方式二-进入项目根目录文件然后cmd进入终端-输入命令-mvn-mybatis-generator-generate-回车" class="headerlink" title="(2) 方式二 : 进入项目根目录文件然后cmd进入终端 输入命令 mvn mybatis-generator:generate   回车"></a>(2) 方式二 : 进入项目根目录文件然后cmd进入终端 输入命令 mvn mybatis-generator:generate   回车</h5><h5 id="2-方式三-利用idea的maven-插件通过双击-执行自动生成代码"><a href="#2-方式三-利用idea的maven-插件通过双击-执行自动生成代码" class="headerlink" title="(2) 方式三 : 利用idea的maven 插件通过双击 执行自动生成代码"></a>(2) 方式三 : 利用idea的maven 插件通过双击 执行自动生成代码</h5><p><img src="C:\wckblogs\images\2020-11-25_012228.png" alt="利用idea的maven插件执行自动生成代码"></p><h5 id="代码自动生成成功—-当出现BUILD-SUCCESS时表示代码自动生成成功-这时你就可以看到项目中已经生成的实体类-mapper-接口和mapper-xml文件了"><a href="#代码自动生成成功—-当出现BUILD-SUCCESS时表示代码自动生成成功-这时你就可以看到项目中已经生成的实体类-mapper-接口和mapper-xml文件了" class="headerlink" title="代码自动生成成功—-当出现BUILD SUCCESS时表示代码自动生成成功,这时你就可以看到项目中已经生成的实体类, mapper 接口和mapper.xml文件了"></a>代码自动生成成功—-当出现BUILD SUCCESS时表示代码自动生成成功,这时你就可以看到项目中已经生成的实体类, mapper 接口和mapper.xml文件了</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building hello-spring-boot <span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- mybatis-generator-maven-plugin:<span class="number">1.3</span>.<span class="number">5</span>:generate (<span class="keyword">default</span>-cli) @ hello-spring-boot ---</span><br><span class="line">[INFO] Connecting to the Database</span><br><span class="line">[INFO] Introspecting table %</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_order</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_order</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_order</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_cat</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_cat</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_cat</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_desc</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_desc</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_desc</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_order_shipping</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_order_shipping</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_order_shipping</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_user</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_user</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_user</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_content</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_content</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_content</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_param_item</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_param_item</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_param_item</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_order_item</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_order_item</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_order_item</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_content_category</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_content_category</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_content_category</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_param</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_param</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_param</span><br><span class="line">[INFO] Saving file TbOrderMapper.xml</span><br><span class="line">[INFO] Saving file TbItemCatMapper.xml</span><br><span class="line">[INFO] Saving file TbItemDescMapper.xml</span><br><span class="line">[INFO] Saving file TbOrderShippingMapper.xml</span><br><span class="line">[INFO] Saving file TbUserMapper.xml</span><br><span class="line">[INFO] Saving file TbContentMapper.xml</span><br><span class="line">[INFO] Saving file TbItemParamItemMapper.xml</span><br><span class="line">[INFO] Saving file TbOrderItemMapper.xml</span><br><span class="line">[INFO] Saving file TbContentCategoryMapper.xml</span><br><span class="line">[INFO] Saving file TbItemMapper.xml</span><br><span class="line">[INFO] Saving file TbItemParamMapper.xml</span><br><span class="line">[INFO] Saving file TbOrder.java</span><br><span class="line">[INFO] Saving file TbOrderMapper.java</span><br><span class="line">[INFO] Saving file TbItemCat.java</span><br><span class="line">[INFO] Saving file TbItemCatMapper.java</span><br><span class="line">[INFO] Saving file TbItemDesc.java</span><br><span class="line">[INFO] Saving file TbItemDescMapper.java</span><br><span class="line">[INFO] Saving file TbOrderShipping.java</span><br><span class="line">[INFO] Saving file TbOrderShippingMapper.java</span><br><span class="line">[INFO] Saving file TbUser.java</span><br><span class="line">[INFO] Saving file TbUserMapper.java</span><br><span class="line">[INFO] Saving file TbContent.java</span><br><span class="line">[INFO] Saving file TbContentMapper.java</span><br><span class="line">[INFO] Saving file TbItemParamItem.java</span><br><span class="line">[INFO] Saving file TbItemParamItemMapper.java</span><br><span class="line">[INFO] Saving file TbOrderItem.java</span><br><span class="line">[INFO] Saving file TbOrderItemMapper.java</span><br><span class="line">[INFO] Saving file TbContentCategory.java</span><br><span class="line">[INFO] Saving file TbContentCategoryMapper.java</span><br><span class="line">[INFO] Saving file TbItem.java</span><br><span class="line">[INFO] Saving file TbItemMapper.java</span><br><span class="line">[INFO] Saving file TbItemParam.java</span><br><span class="line">[INFO] Saving file TbItemParamMapper.java</span><br><span class="line">[WARNING] Column id, specified as an identity column in table tb_order, does not exist in the table.</span><br><span class="line">[WARNING] Column id, specified as an identity column in table tb_item_desc, does not exist in the table.</span><br><span class="line">[WARNING] Column id, specified as an identity column in table tb_order_shipping, does not exist in the table.</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: <span class="number">2.901</span> s</span><br><span class="line">[INFO] Finished at: <span class="number">2018</span>-<span class="number">05</span>-<span class="number">29</span>T01:<span class="number">24</span>:<span class="number">17</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">[INFO] Final Memory: <span class="number">12</span>M/<span class="number">192</span>M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="7-在启动类中添加dao层接口的扫描路径-MapperScan-basePackages-“com-xxx-dao”"><a href="#7-在启动类中添加dao层接口的扫描路径-MapperScan-basePackages-“com-xxx-dao”" class="headerlink" title="7. 在启动类中添加dao层接口的扫描路径 @MapperScan(basePackages = “com.xxx.*.dao”)"></a>7. 在启动类中添加dao层接口的扫描路径 @MapperScan(basePackages = “com.xxx.*.dao”)</h3><h5 id="注意-该-MapperScan-import使用的是-import-tk-mybatis-spring-annotation-MapperScan"><a href="#注意-该-MapperScan-import使用的是-import-tk-mybatis-spring-annotation-MapperScan" class="headerlink" title="注意: 该 @MapperScan import使用的是 import tk.mybatis.spring.annotation.MapperScan;"></a>注意: 该 @MapperScan import使用的是 import tk.mybatis.spring.annotation.MapperScan;</h5><h4 id="8-在所有的实体类上的-Table注解中加入schema属性"><a href="#8-在所有的实体类上的-Table注解中加入schema属性" class="headerlink" title="8. 在所有的实体类上的@Table注解中加入schema属性"></a>8. 在所有的实体类上的@Table注解中加入schema属性</h4><p><img src="C:\wckblogs\images\2020-11-25_132333.png"></p><h4 id="9-创建通用的service接口和实现"><a href="#9-创建通用的service接口和实现" class="headerlink" title="9 . 创建通用的service接口和实现"></a>9 . 创建通用的service接口和实现</h4><h5 id="通过上面的操作我们的所有实体类和mapper-xml以及dao层接口均已自动生成-并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法-此时我们的dao层单表操作既可以做到零代码实现了-在spring-mvc架构中我们知道控制器controller调用service-service调用mapper接口-此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。-那么接下来我们就对service层做统一封装-实现service层单表操作的零代码-。-——-在你项目的common-或者utils-亦或者service-的package新建一个BaseService接口和BaseServiceImpl实现类-类名根据个人爱好"><a href="#通过上面的操作我们的所有实体类和mapper-xml以及dao层接口均已自动生成-并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法-此时我们的dao层单表操作既可以做到零代码实现了-在spring-mvc架构中我们知道控制器controller调用service-service调用mapper接口-此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。-那么接下来我们就对service层做统一封装-实现service层单表操作的零代码-。-——-在你项目的common-或者utils-亦或者service-的package新建一个BaseService接口和BaseServiceImpl实现类-类名根据个人爱好" class="headerlink" title="通过上面的操作我们的所有实体类和mapper.xml以及dao层接口均已自动生成,并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法,此时我们的dao层单表操作既可以做到零代码实现了 !在spring mvc架构中我们知道控制器controller调用service,service调用mapper接口, 此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。 那么接下来我们就对service层做统一封装, 实现service层单表操作的零代码 。 —— 在你项目的common(或者utils,亦或者service)的package新建一个BaseService接口和BaseServiceImpl实现类(类名根据个人爱好)"></a>通过上面的操作我们的所有实体类和mapper.xml以及dao层接口均已自动生成,并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法,此时我们的dao层单表操作既可以做到零代码实现了 !在spring mvc架构中我们知道控制器controller调用service,service调用mapper接口, 此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。 那么接下来我们就对service层做统一封装, 实现service层单表操作的零代码 。 —— 在你项目的common(或者utils,亦或者service)的package新建一个BaseService接口和BaseServiceImpl实现类(类名根据个人爱好)</h5><h5 id="新建service层所有接口的父级service-让service层所有的接口继承该父级BaseService"><a href="#新建service层所有接口的父级service-让service层所有的接口继承该父级BaseService" class="headerlink" title="新建service层所有接口的父级service, 让service层所有的接口继承该父级BaseService"></a>新建service层所有接口的父级service, 让service层所有的接口继承该父级BaseService</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.beyondbit.ias.bclproject.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BaseService 作为sevice层提供的通用service父级接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangchengkai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/25 0:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseService</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中不为空的字段作为where语句的条件使用=号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回查询列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">select</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中不为空的字段作为where语句的条件使用=号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 一个实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">T <span class="title">selectOne</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中不为空的字段作为where语句的条件使用=号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 按条件查询的统计条数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">selectCount</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中的主键id作作为where语句的查询条件 </span></span><br><span class="line"><span class="comment">     * ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回根据主键id查询到的实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">T <span class="title">selectByPrimaryKey</span><span class="params">(Object var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义条件查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回根据自定义查询条件/排序/分组/分页/去重....等获取到的列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt;  <span class="title">selectByExample</span><span class="params">(Example example)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询表中的所有数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回表中的所有数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询表中的所有数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回分页查询到的表中的所有数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">PageInfo&lt;T&gt; <span class="title">selectAllPage</span><span class="params">(Integer pageNum, Integer pageSize)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询该数据是否存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">existsWithPrimaryKey</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键作为where查询条件修改数据(此方法当实体类中的属性为null时会将数据库中队一个的字段也修改为null)</span></span><br><span class="line"><span class="comment">     * 个人不怎么推荐使用本方法 ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键作为where查询条件修改数据(此方法只修改实体类中不为null属性所对应的字段)</span></span><br><span class="line"><span class="comment">     * 个人强烈推荐使用本方法修改数据 ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入数据(实体类中为null属性所对应的字段也设置为null不会使用默认值)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入数据(实体类中为null属性所对应的字段会使用默认值)</span></span><br><span class="line"><span class="comment">     * 个人强烈推荐使用本方法新增数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除数据(实体类中属性非空字段作为where 查询的条件 用and 拼接)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键删除数据 ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function">PageInfo&lt;T&gt; <span class="title">selectPage</span><span class="params">(Integer pageNum, Integer pageSize,T var1)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="新建service层所有接口的父级接口-让service层所有的实现类继承该父级BaseServiceImpl"><a href="#新建service层所有接口的父级接口-让service层所有的实现类继承该父级BaseServiceImpl" class="headerlink" title="新建service层所有接口的父级接口, 让service层所有的实现类继承该父级BaseServiceImpl"></a>新建service层所有接口的父级接口, 让service层所有的实现类继承该父级BaseServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.beyondbit.ias.bclproject.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BaseServiceImpl 作为sevice层提供的通用service实现类的父级类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangchengkai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/25 0:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServiceImpl</span>&lt;<span class="title">T</span>, <span class="title">E</span> <span class="keyword">extends</span> <span class="title">MyMapper</span>&lt;<span class="title">T</span>&gt;&gt; <span class="keyword">implements</span> <span class="title">MyService</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> E dao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前泛型真实类型的Class</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Class&lt;T&gt; modelClass;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyServiceImpl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ParameterizedType pt = (ParameterizedType) <span class="keyword">this</span>.getClass().getGenericSuperclass();</span><br><span class="line">        modelClass = (Class&lt;T&gt;) pt.getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">select</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.select(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectOne</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectOne(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">selectCount</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectCount(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectByPrimaryKey</span><span class="params">(Object var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectByPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">selectAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;T&gt; <span class="title">selectAllPage</span><span class="params">(Integer pageNum, Integer pageSize)</span> </span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum == <span class="keyword">null</span> ? <span class="number">0</span> : pageNum, pageSize == <span class="keyword">null</span> ? <span class="number">0</span> : pageSize);</span><br><span class="line">        PageInfo&lt;T&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;T&gt;(dao.selectAll());</span><br><span class="line">        <span class="keyword">return</span> pageInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;T&gt; <span class="title">selectPage</span><span class="params">(Integer pageNum, Integer pageSize, T var1)</span> </span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum == <span class="keyword">null</span> ? <span class="number">0</span> : pageNum, pageSize == <span class="keyword">null</span> ? <span class="number">0</span> : pageSize);</span><br><span class="line">        PageInfo&lt;T&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;T&gt;(dao.select(var1));</span><br><span class="line">        <span class="keyword">return</span> pageInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">existsWithPrimaryKey</span><span class="params">(Object var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.existsWithPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.updateByPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.updateByPrimaryKeySelective(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">selectByExample</span><span class="params">(Example example)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.insert(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.insertSelective(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.delete(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(Object var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.deleteByPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="10-测试"><a href="#10-测试" class="headerlink" title="10. 测试"></a>10. 测试</h4><p><img src="C:\wckblogs\images\2020-11-25_140421.png"></p><p><img src="C:\wckblogs\images\2020-11-25_140936.png"></p><h5 id="查询测试成功-那么我们可以看一下service层和dao层的代码"><a href="#查询测试成功-那么我们可以看一下service层和dao层的代码" class="headerlink" title="查询测试成功!  那么我们可以看一下service层和dao层的代码"></a>查询测试成功!  那么我们可以看一下service层和dao层的代码</h5><p><img src="C:\wckblogs\images\2020-11-25_140457.png"></p><p><img src="C:\wckblogs\images\2020-11-25_140541.png"></p><p><img src="C:\wckblogs\images\2020-11-25_140622.png"></p><h4 id="11-tk-mybatis先关通用api详情"><a href="#11-tk-mybatis先关通用api详情" class="headerlink" title="11. tk.mybatis先关通用api详情"></a>11. tk.mybatis先关通用api详情</h4><p><img src="C:\wckblogs\images\2020-11-25_233606.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tk.Mybatis 的使用</title>
      <link href="2020/11/09/hello-world/"/>
      <url>2020/11/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>不知各位程序君在开发过程中, 是否依旧还在在为手动创建entity实体类/dao层接口以及Mapper.xml中疯狂追加sql语句而烦恼吗 ?那么接下来将通过介绍如何使用tk.mybatis来提升开发效率!</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><h3 id="1-在项目的pom-xml文件中引入-mapper-spring-boot-starter-依赖"><a href="#1-在项目的pom-xml文件中引入-mapper-spring-boot-starter-依赖" class="headerlink" title="1. 在项目的pom.xml文件中引入 mapper-spring-boot-starter 依赖"></a>1. 在项目的pom.xml文件中引入 <code>mapper-spring-boot-starter</code> 依赖</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;mapper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;2.0.2&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>该依赖会自动引入 MyBaits 相关依赖</p><h3 id="2-在pom-xml-中添加mybatis-generator-maven-plugin-插件"><a href="#2-在pom-xml-中添加mybatis-generator-maven-plugin-插件" class="headerlink" title="2. 在pom.xml 中添加mybatis-generator-maven-plugin 插件"></a>2. 在pom.xml 中添加mybatis-generator-maven-plugin 插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.5&lt;/version&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;configurationFile&gt;<span class="variable">$&#123;basedir&#125;</span>/src/main/resources/generator/generatorConfig.xml&lt;/configurationFile&gt;</span><br><span class="line">                &lt;overwrite&gt;<span class="literal">true</span>&lt;/overwrite&gt;</span><br><span class="line">                &lt;verbose&gt;<span class="literal">true</span>&lt;/verbose&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">            &lt;dependencies&gt;</span><br><span class="line">                &lt;dependency&gt;</span><br><span class="line">                    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;<span class="variable">$&#123;mysql.version&#125;</span>&lt;/version&gt;</span><br><span class="line">                &lt;/dependency&gt;</span><br><span class="line">                &lt;dependency&gt;</span><br><span class="line">                    &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;mapper&lt;/artifactId&gt;</span><br><span class="line">                    &lt;version&gt;3.4.4&lt;/version&gt;</span><br><span class="line">                &lt;/dependency&gt;</span><br><span class="line">            &lt;/dependencies&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure><p>该插件是 MyBatis 的 Maven 插件用于自动生成实体类,Mapper接口和mapper.xml文件</p><h3 id="3-设置-mybatis-generator-maven-plugin-插件自动生成代码配置"><a href="#3-设置-mybatis-generator-maven-plugin-插件自动生成代码配置" class="headerlink" title="3. 设置 mybatis-generator-maven-plugin 插件自动生成代码配置"></a>3. 设置 mybatis-generator-maven-plugin 插件自动生成代码配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!-- 引入数据库连接配置 --&gt;</span><br><span class="line">    &lt;context id=<span class="string">&quot;KingbaseES8&quot;</span> targetRuntime=<span class="string">&quot;MyBatis3Simple&quot;</span> defaultModelType=<span class="string">&quot;flat&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;beginningDelimiter&quot;</span> value=<span class="string">&quot;`&quot;</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;endingDelimiter&quot;</span> value=<span class="string">&quot;`&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 tk.mybatis 插件 --&gt;</span><br><span class="line">        &lt;plugin type=<span class="string">&quot;tk.mybatis.mapper.generator.MapperPlugin&quot;</span>&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;mappers&quot;</span> value=<span class="string">&quot;com.beyondbit.ias.bclproject.common.MyMapper&quot;</span>/&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置数据库连接 --&gt;</span><br><span class="line">        &lt;jdbcConnection</span><br><span class="line">                driverClass=<span class="string">&quot;com.kingbase8.Driver&quot;</span></span><br><span class="line">                connectionURL=<span class="string">&quot;jdbc:kingbase8://31.0.37.96:54321/DBIT_XH&quot;</span></span><br><span class="line">                userId=<span class="string">&quot;system&quot;</span></span><br><span class="line">                password=<span class="string">&quot;System#1234&quot;</span>&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置实体类存放路径 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=<span class="string">&quot;com.beyondbit.ias.bclproject.entity&quot;</span> targetProject=<span class="string">&quot;src/main/java&quot;</span>&gt;</span><br><span class="line">            &lt;!--  <span class="keyword">for</span> MyBatis3/MyBatis3Simple</span><br><span class="line">          自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">       --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;constructorBased&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层<span class="keyword">package</span>，最终生成的类放在这个<span class="keyword">package</span>下，默认为<span class="keyword">false</span> --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;enableSubPackages&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- <span class="keyword">for</span> MyBatis3 / MyBatis3Simple</span><br><span class="line">                是否创建一个不可变的类，如果为<span class="keyword">true</span>，</span><br><span class="line">                那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;immutable&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置一个根对象，</span><br><span class="line">                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">                注意：如果在key <span class="class"><span class="keyword">class</span>或者<span class="title">record</span> <span class="title">class</span>中有<span class="title">root</span> <span class="title">class</span>相同的属性，<span class="title">MBG</span>就不会重新生成这些属性了，包括：</span></span><br><span class="line"><span class="class">                    1，属性名相同，类型相同，有相同的<span class="title">getter</span>/<span class="title">setter</span>方法；</span></span><br><span class="line"><span class="class">             --&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">property</span> <span class="title">name</span></span>=<span class="string">&quot;BaseEntity&quot;</span> value=<span class="string">&quot;com.beyondbit.ias.bclproject.entity&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;trimStrings&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 XML 存放路径 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=<span class="string">&quot;mapper&quot;</span> targetProject=<span class="string">&quot;src/main/resources&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 DAO 存放路径 --&gt;</span><br><span class="line">        &lt;javaClientGenerator</span><br><span class="line">                targetPackage=<span class="string">&quot;com.beyondbit.ias.bclproject.dao&quot;</span></span><br><span class="line">                targetProject=<span class="string">&quot;src/main/java&quot;</span></span><br><span class="line">                type=<span class="string">&quot;XMLMAPPER&quot;</span>&gt;</span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层<span class="keyword">package</span>，最终生成的类放在这个<span class="keyword">package</span>下，默认为<span class="keyword">false</span> --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;enableSubPackages&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置需要指定生成的数据库和表，% 代表所有表 --&gt;</span><br><span class="line">        &lt;table catalog=<span class="string">&quot;DBIT_XH&quot;</span> tableName=<span class="string">&quot;OA_%&quot;</span>&gt;</span><br><span class="line">            &lt;!-- 默认为<span class="keyword">false</span>，如果设置为<span class="keyword">true</span>，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;ignoreQualifiersAtRuntime&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!-- 引入数据库连接配置 --&gt;</span><br><span class="line">    &lt;context id=<span class="string">&quot;KingbaseES8&quot;</span> targetRuntime=<span class="string">&quot;MyBatis3Simple&quot;</span> defaultModelType=<span class="string">&quot;flat&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;beginningDelimiter&quot;</span> value=<span class="string">&quot;`&quot;</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;endingDelimiter&quot;</span> value=<span class="string">&quot;`&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 tk.mybatis 插件 --&gt;</span><br><span class="line">        &lt;plugin type=<span class="string">&quot;tk.mybatis.mapper.generator.MapperPlugin&quot;</span>&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;mappers&quot;</span> value=<span class="string">&quot;com.beyondbit.ias.bclproject.common.MyMapper&quot;</span>/&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置数据库连接 --&gt;</span><br><span class="line">        &lt;jdbcConnection</span><br><span class="line">                driverClass=<span class="string">&quot;com.kingbase8.Driver&quot;</span></span><br><span class="line">                connectionURL=<span class="string">&quot;jdbc:kingbase8://31.0.37.96:54321/DBIT_XH&quot;</span></span><br><span class="line">                userId=<span class="string">&quot;system&quot;</span></span><br><span class="line">                password=<span class="string">&quot;System#1234&quot;</span>&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置实体类存放路径 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=<span class="string">&quot;com.beyondbit.ias.bclproject.entity&quot;</span> targetProject=<span class="string">&quot;src/main/java&quot;</span>&gt;</span><br><span class="line">            &lt;!--  <span class="keyword">for</span> MyBatis3/MyBatis3Simple</span><br><span class="line">          自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">       --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;constructorBased&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层<span class="keyword">package</span>，最终生成的类放在这个<span class="keyword">package</span>下，默认为<span class="keyword">false</span> --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;enableSubPackages&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- <span class="keyword">for</span> MyBatis3 / MyBatis3Simple</span><br><span class="line">                是否创建一个不可变的类，如果为<span class="keyword">true</span>，</span><br><span class="line">                那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">             --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;immutable&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置一个根对象，</span><br><span class="line">                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">                注意：如果在key <span class="class"><span class="keyword">class</span>或者<span class="title">record</span> <span class="title">class</span>中有<span class="title">root</span> <span class="title">class</span>相同的属性，<span class="title">MBG</span>就不会重新生成这些属性了，包括：</span></span><br><span class="line"><span class="class">                    1，属性名相同，类型相同，有相同的<span class="title">getter</span>/<span class="title">setter</span>方法；</span></span><br><span class="line"><span class="class">             --&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">property</span> <span class="title">name</span></span>=<span class="string">&quot;BaseEntity&quot;</span> value=<span class="string">&quot;com.beyondbit.ias.bclproject.entity&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;trimStrings&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 XML 存放路径 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=<span class="string">&quot;mapper&quot;</span> targetProject=<span class="string">&quot;src/main/resources&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置 DAO 存放路径 --&gt;</span><br><span class="line">        &lt;javaClientGenerator</span><br><span class="line">                targetPackage=<span class="string">&quot;com.beyondbit.ias.bclproject.dao&quot;</span></span><br><span class="line">                targetProject=<span class="string">&quot;src/main/java&quot;</span></span><br><span class="line">                type=<span class="string">&quot;XMLMAPPER&quot;</span>&gt;</span><br><span class="line">            &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层<span class="keyword">package</span>，最终生成的类放在这个<span class="keyword">package</span>下，默认为<span class="keyword">false</span> --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;enableSubPackages&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置需要指定生成的数据库和表，% 代表所有表 --&gt;</span><br><span class="line">        &lt;table catalog=<span class="string">&quot;DBIT_XH&quot;</span> tableName=<span class="string">&quot;OA_%&quot;</span>&gt;</span><br><span class="line">            &lt;!-- 默认为<span class="keyword">false</span>，如果设置为<span class="keyword">true</span>，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;ignoreQualifiersAtRuntime&quot;</span> value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><p>在src/main/resources下新建generator目录,然后在generator目录下在新建一个generatorConfig.xml文件,然后在该文件中配置自动生成代码的相关详情 — 注意该配置文件中的数据库连接池配置根据个人项目实际情况去配置,本人这里使用的是国产数据库金仓,</p><h3 id="4-在application-yml中配置mybatis"><a href="#4-在application-yml中配置mybatis" class="headerlink" title="4. 在application.yml中配置mybatis"></a>4. 在application.yml中配置mybatis</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mybatis:</span><br><span class="line">    type-aliases-<span class="keyword">package</span>: <span class="comment">//实体类的存放路径，如:com.beyondbit.ias.*.entity</span></span><br><span class="line">    mapper-locations: classpath:mapper<span class="comment">/*.xml  </span></span><br><span class="line"><span class="comment">    configuration: </span></span><br><span class="line"><span class="comment">      map-underscore-to-camel-case: true //开启驼峰功能</span></span><br><span class="line"><span class="comment">      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl //sql控制台打印</span></span><br><span class="line"><span class="comment">    configuration-properties: &#123; dbSchema: DBIT_BCLPROJECT. &#125; //配置数据库的模式</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><h3 id="5-创建一个通用的父级MyMapper接口"><a href="#5-创建一个通用的父级MyMapper接口" class="headerlink" title="5. 创建一个通用的父级MyMapper接口"></a>5. 创建一个通用的父级MyMapper接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.beyondbit.ias.xhlh.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.MySqlMapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MyMapper 作为tk.mybatis提供的通用mapper父级接口</span></span><br><span class="line"><span class="comment"> * 特别注意，该接口不能被<span class="doctag">@mapperScan</span>注解的路径扫描到，否则会出错</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: MyMapper&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangchengkai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/25 0:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyMapper</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">T</span>&gt;, <span class="title">MySqlMapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*** 特别注意该接口千万不能被mapperScan扫描到 </p><h3 id="6-利用插件执行自动生成代码-实体类-mapper接口和mapper-xml代码"><a href="#6-利用插件执行自动生成代码-实体类-mapper接口和mapper-xml代码" class="headerlink" title="6.  利用插件执行自动生成代码 (实体类/mapper接口和mapper.xml代码)"></a>6.  利用插件执行自动生成代码 (实体类/mapper接口和mapper.xml代码)</h3><h5 id="1-方式一-打开idea或者eclipse的Terminal-终端输入的命令-mvn-mybatis-generator-generate-回车"><a href="#1-方式一-打开idea或者eclipse的Terminal-终端输入的命令-mvn-mybatis-generator-generate-回车" class="headerlink" title="(1) 方式一  :  打开idea或者eclipse的Terminal 终端输入的命令   mvn mybatis-generator:generate   回车"></a>(1) 方式一  :  打开idea或者eclipse的Terminal 终端输入的命令   mvn mybatis-generator:generate   回车</h5><h5 id="2-方式二-进入项目根目录文件然后cmd进入终端-输入命令-mvn-mybatis-generator-generate-回车"><a href="#2-方式二-进入项目根目录文件然后cmd进入终端-输入命令-mvn-mybatis-generator-generate-回车" class="headerlink" title="(2) 方式二 : 进入项目根目录文件然后cmd进入终端 输入命令 mvn mybatis-generator:generate   回车"></a>(2) 方式二 : 进入项目根目录文件然后cmd进入终端 输入命令 mvn mybatis-generator:generate   回车</h5><h5 id="3-方式三-利用idea的maven-插件通过双击-执行自动生成代码"><a href="#3-方式三-利用idea的maven-插件通过双击-执行自动生成代码" class="headerlink" title="(3) 方式三 : 利用idea的maven 插件通过双击 执行自动生成代码"></a>(3) 方式三 : 利用idea的maven 插件通过双击 执行自动生成代码</h5><p><img src="/2020/11/09/hello-world/../images/2020-11-25_012228.png" alt="利用idea的maven插件执行自动生成代码"> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building hello-spring-boot <span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- mybatis-generator-maven-plugin:<span class="number">1.3</span><span class="number">.5</span>:generate (<span class="keyword">default</span>-cli) @ hello-spring-boot ---</span><br><span class="line">[INFO] Connecting to the Database</span><br><span class="line">[INFO] Introspecting table %</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_order</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_order</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_order</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_cat</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_cat</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_cat</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_desc</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_desc</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_desc</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_order_shipping</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_order_shipping</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_order_shipping</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_user</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_user</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_user</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_content</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_content</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_content</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_param_item</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_param_item</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_param_item</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_order_item</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_order_item</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_order_item</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_content_category</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_content_category</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_content_category</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item</span><br><span class="line">[INFO] Generating Record <span class="class"><span class="keyword">class</span> <span class="title">for</span> <span class="title">table</span> <span class="title">tb_item_param</span></span></span><br><span class="line">[INFO] Generating Mapper Interface for table tb_item_param</span><br><span class="line">[INFO] Generating SQL Map <span class="keyword">for</span> table tb_item_param</span><br><span class="line">[INFO] Saving file TbOrderMapper.xml</span><br><span class="line">[INFO] Saving file TbItemCatMapper.xml</span><br><span class="line">[INFO] Saving file TbItemDescMapper.xml</span><br><span class="line">[INFO] Saving file TbOrderShippingMapper.xml</span><br><span class="line">[INFO] Saving file TbUserMapper.xml</span><br><span class="line">[INFO] Saving file TbContentMapper.xml</span><br><span class="line">[INFO] Saving file TbItemParamItemMapper.xml</span><br><span class="line">[INFO] Saving file TbOrderItemMapper.xml</span><br><span class="line">[INFO] Saving file TbContentCategoryMapper.xml</span><br><span class="line">[INFO] Saving file TbItemMapper.xml</span><br><span class="line">[INFO] Saving file TbItemParamMapper.xml</span><br><span class="line">[INFO] Saving file TbOrder.java</span><br><span class="line">[INFO] Saving file TbOrderMapper.java</span><br><span class="line">[INFO] Saving file TbItemCat.java</span><br><span class="line">[INFO] Saving file TbItemCatMapper.java</span><br><span class="line">[INFO] Saving file TbItemDesc.java</span><br><span class="line">[INFO] Saving file TbItemDescMapper.java</span><br><span class="line">[INFO] Saving file TbOrderShipping.java</span><br><span class="line">[INFO] Saving file TbOrderShippingMapper.java</span><br><span class="line">[INFO] Saving file TbUser.java</span><br><span class="line">[INFO] Saving file TbUserMapper.java</span><br><span class="line">[INFO] Saving file TbContent.java</span><br><span class="line">[INFO] Saving file TbContentMapper.java</span><br><span class="line">[INFO] Saving file TbItemParamItem.java</span><br><span class="line">[INFO] Saving file TbItemParamItemMapper.java</span><br><span class="line">[INFO] Saving file TbOrderItem.java</span><br><span class="line">[INFO] Saving file TbOrderItemMapper.java</span><br><span class="line">[INFO] Saving file TbContentCategory.java</span><br><span class="line">[INFO] Saving file TbContentCategoryMapper.java</span><br><span class="line">[INFO] Saving file TbItem.java</span><br><span class="line">[INFO] Saving file TbItemMapper.java</span><br><span class="line">[INFO] Saving file TbItemParam.java</span><br><span class="line">[INFO] Saving file TbItemParamMapper.java</span><br><span class="line">[WARNING] Column id, specified as an identity column in table tb_order, does not exist in the table.</span><br><span class="line">[WARNING] Column id, specified as an identity column in table tb_item_desc, does not exist in the table.</span><br><span class="line">[WARNING] Column id, specified as an identity column in table tb_order_shipping, does not exist in the table.</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: <span class="number">2.901</span> s</span><br><span class="line">[INFO] Finished at: <span class="number">2018</span>-<span class="number">05</span>-29T01:<span class="number">24</span>:<span class="number">17</span>+08:<span class="number">00</span></span><br><span class="line">[INFO] Final Memory: 12M/192M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>当出现BUILD SUCCESS时表示代码自动生成成功,这时你就可以看到项目中已经生成的实体类, mapper 接口和mapper.xml文件了</p><h3 id="7-在启动类中添加dao层接口的扫描路径-MapperScan-basePackages-“com-xxx-dao”"><a href="#7-在启动类中添加dao层接口的扫描路径-MapperScan-basePackages-“com-xxx-dao”" class="headerlink" title="7. 在启动类中添加dao层接口的扫描路径 @MapperScan(basePackages = “com.xxx.*.dao”)"></a>7. 在启动类中添加dao层接口的扫描路径 @MapperScan(basePackages = “com.xxx.*.dao”)</h3><h5 id="注意-该-MapperScan-import使用的是-import-tk-mybatis-spring-annotation-MapperScan"><a href="#注意-该-MapperScan-import使用的是-import-tk-mybatis-spring-annotation-MapperScan" class="headerlink" title="注意: 该 @MapperScan import使用的是 import tk.mybatis.spring.annotation.MapperScan;"></a>注意: 该 @MapperScan import使用的是 import tk.mybatis.spring.annotation.MapperScan;</h5><p><img src="/2020/11/09/hello-world/../images/2021-01-17_225145.png"></p><h3 id="8-在所有的实体类上的-Table注解中加入schema属性"><a href="#8-在所有的实体类上的-Table注解中加入schema属性" class="headerlink" title="8. 在所有的实体类上的@Table注解中加入schema属性"></a>8. 在所有的实体类上的@Table注解中加入schema属性</h3><p><img src="/2020/11/09/hello-world/../images/2020-11-25_132333.png"></p><h3 id="9-创建通用的service接口和实现"><a href="#9-创建通用的service接口和实现" class="headerlink" title="9. 创建通用的service接口和实现"></a>9. 创建通用的service接口和实现</h3><h5 id="通过上面的操作我们的所有实体类和mapper-xml以及dao层接口均已自动生成-并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法-此时我们的dao层单表操作既可以做到零代码实现了-在spring-mvc架构中我们知道控制器controller调用service-service调用mapper接口-此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。-那么接下来我们就对service层做统一封装-实现service层单表操作的零代码-。-——-在你项目的common-或者utils-亦或者service-的package新建一个BaseService接口和BaseServiceImpl实现类-类名根据个人爱好"><a href="#通过上面的操作我们的所有实体类和mapper-xml以及dao层接口均已自动生成-并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法-此时我们的dao层单表操作既可以做到零代码实现了-在spring-mvc架构中我们知道控制器controller调用service-service调用mapper接口-此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。-那么接下来我们就对service层做统一封装-实现service层单表操作的零代码-。-——-在你项目的common-或者utils-亦或者service-的package新建一个BaseService接口和BaseServiceImpl实现类-类名根据个人爱好" class="headerlink" title="通过上面的操作我们的所有实体类和mapper.xml以及dao层接口均已自动生成,并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法,此时我们的dao层单表操作既可以做到零代码实现了 !在spring mvc架构中我们知道控制器controller调用service,service调用mapper接口, 此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。 那么接下来我们就对service层做统一封装, 实现service层单表操作的零代码 。 —— 在你项目的common(或者utils,亦或者service)的package新建一个BaseService接口和BaseServiceImpl实现类(类名根据个人爱好)"></a>通过上面的操作我们的所有实体类和mapper.xml以及dao层接口均已自动生成,并且dao层的所有接口均已继承MyMapper通用父级接口获取了所有单表操作的封装方法,此时我们的dao层单表操作既可以做到零代码实现了 !在spring mvc架构中我们知道控制器controller调用service,service调用mapper接口, 此时mapper接口以及通过父级MyMapper接口完成了统一的单表操作封装。 那么接下来我们就对service层做统一封装, 实现service层单表操作的零代码 。 —— 在你项目的common(或者utils,亦或者service)的package新建一个BaseService接口和BaseServiceImpl实现类(类名根据个人爱好)</h5><h5 id="新建service层所有接口的父级service-让service层所有的接口继承该父级BaseService"><a href="#新建service层所有接口的父级service-让service层所有的接口继承该父级BaseService" class="headerlink" title="新建service层所有接口的父级service, 让service层所有的接口继承该父级BaseService"></a>新建service层所有接口的父级service, 让service层所有的接口继承该父级BaseService</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.beyondbit.ias.bclproject.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BaseService 作为sevice层提供的通用service父级接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangchengkai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/25 0:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseService</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中不为空的字段作为where语句的条件使用=号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回查询列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">select</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中不为空的字段作为where语句的条件使用=号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 一个实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">T <span class="title">selectOne</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中不为空的字段作为where语句的条件使用=号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 按条件查询的统计条数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">selectCount</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体类中的主键id作作为where语句的查询条件 </span></span><br><span class="line"><span class="comment">     * ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> var1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回根据主键id查询到的实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">T <span class="title">selectByPrimaryKey</span><span class="params">(Object var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义条件查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回根据自定义查询条件/排序/分组/分页/去重....等获取到的列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt;  <span class="title">selectByExample</span><span class="params">(Example example)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询表中的所有数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回表中的所有数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询表中的所有数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回分页查询到的表中的所有数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">PageInfo&lt;T&gt; <span class="title">selectAllPage</span><span class="params">(Integer pageNum, Integer pageSize)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键查询该数据是否存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">existsWithPrimaryKey</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键作为where查询条件修改数据(此方法当实体类中的属性为null时会将数据库中队一个的字段也修改为null)</span></span><br><span class="line"><span class="comment">     * 个人不怎么推荐使用本方法 ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键作为where查询条件修改数据(此方法只修改实体类中不为null属性所对应的字段)</span></span><br><span class="line"><span class="comment">     * 个人强烈推荐使用本方法修改数据 ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入数据(实体类中为null属性所对应的字段也设置为null不会使用默认值)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入数据(实体类中为null属性所对应的字段会使用默认值)</span></span><br><span class="line"><span class="comment">     * 个人强烈推荐使用本方法新增数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 存在true 不存在false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除数据(实体类中属性非空字段作为where 查询的条件 用and 拼接)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键删除数据 ---注意实体类中的主键必须加<span class="doctag">@ID</span>注解此方法才生效</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(T var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function">PageInfo&lt;T&gt; <span class="title">selectPage</span><span class="params">(Integer pageNum, Integer pageSize,T var1)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="新建service层所有接口的父级接口-让service层所有的实现类继承该父级BaseServiceImpl"><a href="#新建service层所有接口的父级接口-让service层所有的实现类继承该父级BaseServiceImpl" class="headerlink" title="新建service层所有接口的父级接口, 让service层所有的实现类继承该父级BaseServiceImpl"></a>新建service层所有接口的父级接口, 让service层所有的实现类继承该父级BaseServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.beyondbit.ias.bclproject.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BaseServiceImpl 作为sevice层提供的通用service实现类的父级类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> wangchengkai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/11/25 0:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServiceImpl</span>&lt;<span class="title">T</span>, <span class="title">E</span> <span class="keyword">extends</span> <span class="title">MyMapper</span>&lt;<span class="title">T</span>&gt;&gt; <span class="keyword">implements</span> <span class="title">MyService</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> E dao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前泛型真实类型的Class</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Class&lt;T&gt; modelClass;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyServiceImpl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ParameterizedType pt = (ParameterizedType) <span class="keyword">this</span>.getClass().getGenericSuperclass();</span><br><span class="line">        modelClass = (Class&lt;T&gt;) pt.getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">select</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.select(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectOne</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectOne(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">selectCount</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectCount(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectByPrimaryKey</span><span class="params">(Object var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectByPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">selectAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;T&gt; <span class="title">selectAllPage</span><span class="params">(Integer pageNum, Integer pageSize)</span> </span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum == <span class="keyword">null</span> ? <span class="number">0</span> : pageNum, pageSize == <span class="keyword">null</span> ? <span class="number">0</span> : pageSize);</span><br><span class="line">        PageInfo&lt;T&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;T&gt;(dao.selectAll());</span><br><span class="line">        <span class="keyword">return</span> pageInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;T&gt; <span class="title">selectPage</span><span class="params">(Integer pageNum, Integer pageSize, T var1)</span> </span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum == <span class="keyword">null</span> ? <span class="number">0</span> : pageNum, pageSize == <span class="keyword">null</span> ? <span class="number">0</span> : pageSize);</span><br><span class="line">        PageInfo&lt;T&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;T&gt;(dao.select(var1));</span><br><span class="line">        <span class="keyword">return</span> pageInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">existsWithPrimaryKey</span><span class="params">(Object var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.existsWithPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.updateByPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.updateByPrimaryKeySelective(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">selectByExample</span><span class="params">(Example example)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.insert(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.insertSelective(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(T var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.delete(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(Object var1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.deleteByPrimaryKey(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="10-测试"><a href="#10-测试" class="headerlink" title="10. 测试"></a>10. 测试</h4><p><img src="/2020/11/09/hello-world/../images/2020-11-25_140421.png"></p><p><img src="/2020/11/09/hello-world/../images/2020-11-25_140936.png"></p><h5 id="查询测试成功-那么我们可以看一下service层和dao层的代码"><a href="#查询测试成功-那么我们可以看一下service层和dao层的代码" class="headerlink" title="查询测试成功!  那么我们可以看一下service层和dao层的代码"></a>查询测试成功!  那么我们可以看一下service层和dao层的代码</h5><p><img src="/2020/11/09/hello-world/../images/2020-11-25_140457.png"></p><p><img src="/2020/11/09/hello-world/../images/2020-11-25_140541.png"></p><p><img src="/2020/11/09/hello-world/../images/2020-11-25_140622.png"></p><h4 id="11-tk-mybatis先关通用api详情"><a href="#11-tk-mybatis先关通用api详情" class="headerlink" title="11. tk.mybatis先关通用api详情"></a>11. tk.mybatis先关通用api详情</h4><p><img src="/2020/11/09/hello-world/../images/2020-11-25_233606.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="2020/11/04/my-first-blog/"/>
      <url>2020/11/04/my-first-blog/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
